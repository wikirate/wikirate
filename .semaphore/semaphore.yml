version: v1.0
name: Wikirate Standard Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
global_job_config:
  env_vars:
    - name: BUNDLE_PATH
      value: ~/wikirate/vendor/bundle/
    - name: RAILS_ENV
      value: test
    - name: CARD_LOAD_STRATEGY
      value: tmp_files
  secrets:
    - name: wikirate-qlty-coverage
  prologue:
    commands:
      # INSTALL WIKIRATE CODE AND DEPENDENCIES
      - checkout
      - sem-version ruby 3.3.0
      - gem update --system
      - git submodule update --init --recursive --depth=1
      - sem-service start mysql 8.0
      - cp -R config/sample/* config/

      # SETUP ALIAS(ES)
      - alias be='bundle exec'

      # INSTALL QLTY
      - curl https://qlty.sh | sh
      - source /home/semaphore/.bash_profile

      # TWEAK ENVIRONMENTAL VARIABLES
      # ...that are too complex for the env_vars config.

      # without the following, code climate uses git to get git details.
      # Semaphore uses the merge sha for PRS, so this leads to coverage report failures.
      - if [ $SEMAPHORE_GIT_PR_SHA ]; then export GIT_COMMIT_SHA=$SEMAPHORE_GIT_PR_SHA; fi;

blocks:
  - name: Unit Tests
#    run:
#      when: "false"
    task:
      prologue:
        commands:
          # - cache delete gems-baseline # occasionally clear
          - cache restore gems-baseline
          - GLCHECK=`checksum Gemfile.lock`
          - cache restore gems-$GLCHECK
          - bundle config set --local deployment 'true'
          - bundle install
          - cache store gems-$GLCHECK vendor/bundle
          - cache store gems-baseline vendor/bundle
          - cache store bundle-config .bundle

          # - nvm use 12.18.2
          - be decko setup

      env_vars:
        - name: RAILS_ROOT
          value: .
      jobs:
        - name: RSpec
          commands:
            - be decko rspec -s -- --format RspecJunitFormatter --out junit.xml --format documentation
      epilogue:
        on_pass:
          commands:
            - qlty coverage publish --incomplete --override-commit-sha $SEMAPHORE_GIT_PR_SHA --override-branch $SEMAPHORE_GIT_BRANCH coverage/.resultset.json
        always:
          commands:
            - test-results publish junit.xml

  - name: Integration Tests
    task:
      secrets:
        - name: wikirate-cypress
      prologue:
        commands:
          - cache restore bundle-config
          - cache restore gems-$(checksum Gemfile.lock)
          - be decko setup

      jobs:
#        - name: Cucumber
#          commands:
#            - RAILS_ENV=cucumber bundle exec decko cucumber -- --format pretty --format junit --out /home/semaphore/reports

        - name: Cypress
          commands:
            - RAILS_ENV=cypress bundle exec decko server -p 5002 &
            # - nvm use 12.18.2
            - yarn install
            - yarn run cypress run --record --reporter junit --reporter-options "mochaFile=/home/semaphore/reports/cypress-output-[hash].xml"
            - pkill -2 -f puma
            - sleep 5

      epilogue:
        always:
          commands:
            - test-results publish /home/semaphore/reports/*.xml
            - qlty coverage publish --incomplete --override-commit-sha $SEMAPHORE_GIT_PR_SHA --override-branch $SEMAPHORE_GIT_BRANCH coverage/.resultset.json

  # NOTE: the code climate reporting cannot be handled in after_pipeline, because
  # after_pipeline does not make secrets available - efm 2022-10-12
  - name: Coverage Report
    task:
      jobs:
        - name: Qlty Coverage
          commands:
            - qlty coverage complete --override-commit-sha $SEMAPHORE_GIT_PR_SHA

after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
